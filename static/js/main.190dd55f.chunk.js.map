{"version":3,"sources":["components/Home.tsx","components/About.tsx","components/Menubar.tsx","components/Experience.tsx","App.js","reportWebVitals.js","serviceWorker.js","index.js"],"names":["getRandomInt","min","max","Math","ceil","floor","random","Home","useState","process","String","join","imgSrc","setImgSrc","randomColor","count","colors","setColors","charSet","split","id","bg","p","h","minW","style","scrollSnapAlign","spacing","cursor","borderRadius","bgGradient","boxSize","onClick","src","color","size","characters","isPlaying","duration","speed","revealDuration","revealEasing","characterSet","About","justify","w","Menubar","listOfButtons","map","title","to","toLowerCase","colorScheme","variant","createButton","shadow","position","zIndex","Experience","pt","pb","fontSize","href","className","contentStyle","background","contentArrowStyle","borderRight","date","iconStyle","icon","ChevronRight","App","theme","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.190dd55f.chunk.js","sourcesContent":["import { Center, Heading, HStack, Image, VStack } from \"@chakra-ui/react\";\nimport randomColor from \"randomcolor\";\nimport { useState } from \"react\";\nimport { RandomReveal } from \"react-random-reveal\";\nimport { CharactersRequired } from \"react-random-reveal/lib/types\";\n\nfunction getRandomInt(min: number, max: number): number {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nexport default function Home(): JSX.Element {\n    const [ imgSrc, setImgSrc ] = useState([process.env.PUBLIC_URL,'/memojis/memoji', String(getRandomInt(1,6)), '.png'].join(''));\n    const [ colors, setColors ] = useState(randomColor({ count: 2 }));\n\n    const handleClick = () => {\n        setImgSrc([process.env.PUBLIC_URL,'/memojis/memoji', String(getRandomInt(1,6)), '.png'].join(''));\n        setColors(randomColor({ count: 2 }))\n    }\n\n\tconst charSet: Array<string> = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789@%$#&*\".split('');\n\n    return (\n        <>\n        <Center id=\"home\" bg=\"#303030\" p=\"20px\" h=\"100vh\" minW=\"100vw\" style={{scrollSnapAlign: \"start\"}}>\n            <HStack>\n                <VStack spacing={8}>\n                    <Image\n                        cursor=\"pointer\"\n                        borderRadius=\"full\"\n                        bgGradient={['linear(to-b,',colors[0],',',colors[1],')'].join('')}\n                        boxSize=\"230px\"\n                        onClick={handleClick}\n                        src={imgSrc}\n                    />\n                    <Heading id=\"home\" color=\"gray.200\" size=\"3xl\">\n                        <RandomReveal\n                            characters=\"Hello, I'm Eduardo\"\n                            isPlaying\n                            duration={1.5}\n                            speed={6}\n                            revealDuration={0.9}\n                            revealEasing=\"easeOutQuad\"\n                            characterSet={charSet as CharactersRequired}\n                        />\n                    </Heading>\n                    <Heading color={colors[1]}>\n                        <RandomReveal\n                            characters=\"Software Engineering student @ UVic\"\n                            isPlaying\n                            duration={2.5}\n                            speed={6}\n                            revealDuration={0.9}\n                            revealEasing=\"easeOutQuad\"\n                            characterSet={charSet as CharactersRequired}\n                        />\n                    </Heading>\n                </VStack>\n            </HStack>\n        </Center>\n        </>\n    );\n}","import { Heading, VStack, Text } from \"@chakra-ui/react\";\n\nexport default function About() {\n    return (\n        <>\n        <VStack id=\"about\" bg=\"gray.800\" justify=\"space-evenly\" h=\"100vh\" minW=\"100vw\" style={{scrollSnapAlign: \"start\"}}>\n            <Heading color=\"white\">About</Heading>\n            <Text color=\"white\" w=\"50vw\">Originally from Porto Alegre, Brazil, I am now based in Victoria, B.C., where I go to the University of Victoria. I am currently entering my 4th year in Software Engineering. I have completed two co-op terms so far and have gained experience with web development and data analysis.</Text>\n        </VStack>\n        </>\n    );\n}","import { Button, Flex } from \"@chakra-ui/react\";\nimport { Link } from 'react-router-dom';\n\nexport default function Menubar(): JSX.Element {\n\n    type title = \"Home\" | \"About\" | \"Experience\" | \"Projects\" | \"Contact\";\n    const pages = [\"Home\", \"About\", \"Experience\", \"Projects\", \"Contact\"];\n\n    function createButton(title: title) {\n        return  <Link to={\"/\"+title.toLowerCase()}>\n                <Button\n                    colorScheme=\"whiteAlpha\"\n                    color=\"white\"\n                    size=\"lg\"\n                    variant=\"ghost\"\n                >\n                    {title}\n                </Button>\n            </Link>;\n    }\n\n    const listOfButtons: JSX.Element[] = pages.map((title) => createButton(title as title));\n\n    return (\n        <Flex shadow=\"xl\" p={3} position=\"fixed\" zIndex=\"2\" w=\"100vw\" bg=\"#303030\" justify=\"center\">\n            {listOfButtons}\n        </Flex>\n    )\n}","import { ChevronRightIcon } from \"@chakra-ui/icons\";\nimport { Box, Heading, VStack } from \"@chakra-ui/react\";\nimport React from \"react\";\nimport { VerticalTimeline, VerticalTimelineElement }  from 'react-vertical-timeline-component';\nimport 'react-vertical-timeline-component/style.min.css';\nimport { Text } from \"@chakra-ui/layout\";\n\nexport default function Experience() {\n    return <VStack pt={40} pb={20} spacing={50}>\n                <Text fontSize=\"1.5em\">Check my <a href=\"#timeline\">work experience timeline</a> and my <a href=\"#programexperience\">program experience</a> below.</Text>\n                <Heading id=\"timeline\">Timeline</Heading>\n                <Box w=\"100vw\">\n                    <VerticalTimeline>\n                        <VerticalTimelineElement\n                            className=\"vertical-timeline-element--work\"\n                            contentStyle={{ background: 'rgb(33, 150, 243)', color: '#fff' }}\n                            contentArrowStyle={{ borderRight: '7px solid  rgb(33, 150, 243)' }}\n                            date=\"2011 - present\"\n                            iconStyle={{ background: 'rgb(33, 150, 243)', color: '#fff' }}\n                            icon={<ChevronRightIcon />}\n                        >\n                            <h3 className=\"vertical-timeline-element-title\">Creative Director</h3>\n                            <h4 className=\"vertical-timeline-element-subtitle\">Miami, FL</h4>\n                            <p>\n                                Creative Direction, User Experience, Visual Design, Project Management, Team Leading\n                            </p>\n                        </VerticalTimelineElement>\n                        <VerticalTimelineElement\n                            className=\"vertical-timeline-element--work\"\n                            contentStyle={{ background: 'rgb(33, 150, 243)', color: '#fff' }}\n                            contentArrowStyle={{ borderRight: '7px solid  rgb(33, 150, 243)' }}\n                            date=\"2011 - present\"\n                            iconStyle={{ background: 'rgb(33, 150, 243)', color: '#fff' }}\n                            icon={<ChevronRightIcon />}\n                        >\n                            <h3 className=\"vertical-timeline-element-title\">Creative Director</h3>\n                            <h4 className=\"vertical-timeline-element-subtitle\">Miami, FL</h4>\n                            <p>\n                                Creative Direction, User Experience, Visual Design, Project Management, Team Leading\n                            </p>\n                        </VerticalTimelineElement>\n                        <VerticalTimelineElement\n                            className=\"vertical-timeline-element--work\"\n                            contentStyle={{ background: 'rgb(33, 150, 243)', color: '#fff' }}\n                            contentArrowStyle={{ borderRight: '7px solid  rgb(33, 150, 243)' }}\n                            date=\"2011 - present\"\n                            iconStyle={{ background: 'rgb(33, 150, 243)', color: '#fff' }}\n                            icon={<ChevronRightIcon />}\n                        >\n                            <h3 className=\"vertical-timeline-element-title\">Creative Director</h3>\n                            <h4 className=\"vertical-timeline-element-subtitle\">Miami, FL</h4>\n                            <p>\n                                Creative Direction, User Experience, Visual Design, Project Management, Team Leading\n                            </p>\n                        </VerticalTimelineElement>\n                        <VerticalTimelineElement\n                            className=\"vertical-timeline-element--work\"\n                            contentStyle={{ background: 'rgb(33, 150, 243)', color: '#fff' }}\n                            contentArrowStyle={{ borderRight: '7px solid  rgb(33, 150, 243)' }}\n                            date=\"2011 - present\"\n                            iconStyle={{ background: 'rgb(33, 150, 243)', color: '#fff' }}\n                            icon={<ChevronRightIcon />}\n                        >\n                            <h3 className=\"vertical-timeline-element-title\">Creative Director</h3>\n                            <h4 className=\"vertical-timeline-element-subtitle\">Miami, FL</h4>\n                            <p>\n                                Creative Direction, User Experience, Visual Design, Project Management, Team Leading\n                            </p>\n                        </VerticalTimelineElement>\n                        <VerticalTimelineElement\n                            className=\"vertical-timeline-element--work\"\n                            contentStyle={{ background: 'rgb(33, 150, 243)', color: '#fff' }}\n                            contentArrowStyle={{ borderRight: '7px solid  rgb(33, 150, 243)' }}\n                            date=\"2011 - present\"\n                            iconStyle={{ background: 'rgb(33, 150, 243)', color: '#fff' }}\n                            icon={<ChevronRightIcon />}\n                        >\n                            <h3 className=\"vertical-timeline-element-title\">Creative Director</h3>\n                            <h4 className=\"vertical-timeline-element-subtitle\">Miami, FL</h4>\n                            <p>\n                                Creative Direction, User Experience, Visual Design, Project Management, Team Leading\n                            </p>\n                        </VerticalTimelineElement>\n                        <VerticalTimelineElement\n                            className=\"vertical-timeline-element--work\"\n                            contentStyle={{ background: 'rgb(33, 150, 243)', color: '#fff' }}\n                            contentArrowStyle={{ borderRight: '7px solid  rgb(33, 150, 243)' }}\n                            date=\"2011 - present\"\n                            iconStyle={{ background: 'rgb(33, 150, 243)', color: '#fff' }}\n                            icon={<ChevronRightIcon />}\n                        >\n                            <h3 className=\"vertical-timeline-element-title\">Creative Director</h3>\n                            <h4 className=\"vertical-timeline-element-subtitle\">Miami, FL</h4>\n                            <p>\n                                Creative Direction, User Experience, Visual Design, Project Management, Team Leading\n                            </p>\n                        </VerticalTimelineElement>\n                    </VerticalTimeline>\n                </Box>\n                <Heading id=\"programexperience\">Program Experience</Heading>\n            </VStack>;\n}","import React from 'react';\nimport {\n  ChakraProvider,\n  theme,\n} from '@chakra-ui/react';\nimport Home from './components/Home.tsx';\nimport About from './components/About.tsx';\nimport Menubar from './components/Menubar';\nimport Experience from './components/Experience';\nimport { Switch, Route, BrowserRouter } from 'react-router-dom';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <ChakraProvider theme={theme}>\n        <Menubar />\n        <Switch>\n          <Route path=\"/about\">\n            <About />\n          </Route>\n          <Route path=\"/experience\">\n            <Experience />\n          </Route>\n          <Route path=\"/\">\n            <Home />\n          </Route>\n        </Switch>\n      </ChakraProvider>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It is the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ColorModeScript } from '@chakra-ui/react';\nimport React, { StrictMode } from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <StrictMode>\n    <ColorModeScript />\n    <App />\n  </StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorker.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}